

import { getAllCategory } from "@/Request/requests";
import React from "react";

export default async function Category() {
  let categories: string[] = [];

  try {
    categories = await getAllCategory();
  } catch (error) {
    console.error("Failed to fetch categories:", error);
  }

  if (!Array.isArray(categories)) {
    categories = [];
  }

  return (
    <div className="pt-16 pb-12">
      <h1 className="text-center mt-10 font-bold text-2xl capitalize text-black">
        Shop by Category
      </h1>

      <div className="mt-12 w-4/5 mx-auto grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
        {categories.map((category) => (
          <div
            key={category}
            className="p-6 rounded-lg cursor-pointer text-center hover:scale-110 transition-all duration-300 bg-gray-200 shadow-md"
          >
            <h1 className="text-sm text-black sm:text-base md:text-lg capitalize font-bold">
              {category}
            </h1>
          </div>
        ))}
      </div>
    </div>
  );
}


"use client";

import React, { useEffect, useState } from "react";
import { Product } from "@/typing";
import { getAllProduct } from "@/Request/requests";
import { Loader } from "lucide-react";
import ProductCard from "./ProductCard";

function AllProduct() {
  const [products, setProducts] = useState<Product[] | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const getData = async () => {
      setLoading(true);
      try {
        const products: Product[] = await getAllProduct();
        console.log(products); // Überprüfe die Produkte hier
        setProducts(products);
      } catch (error) {
        console.log(error);
      } finally {
        setLoading(false);
      }
    };
    getData();
  }, []);

  return (
    <div className="pt-16 pb-12">
      <h1 className="text-center font-bold text-2xl text-black">All Products</h1>
      {loading ? (
        <div className="flex justify-center items-center mt-16">
          <Loader size={36} className="animate-spin" />
        </div>
      ) : (
        <div className="w-4/5 mx-auto mt-16 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
          {products?.map((product) => (
            <ProductCard key={product.id} product={product} />
          ))}
        </div>
      )}
    </div>
  );
}

export default AllProduct;
